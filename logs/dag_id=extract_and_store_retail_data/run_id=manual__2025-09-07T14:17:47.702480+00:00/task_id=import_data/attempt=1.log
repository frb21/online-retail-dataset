{"timestamp":"2025-09-07T14:18:13.693643","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-07T14:18:13.694370","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-07T14:18:13.752179Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-07T14:18:13.752577Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-07T14:18:13.752913Z","level":"info","event":"Current task name:import_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-07T14:18:13.753224Z","level":"info","event":"Dag name:extract_and_store_retail_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-07T14:18:15.215702","level":"warning","event":"/opt/airflow/dags/pipeline.py:38: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n  df['InvoiceDate'] = pd.to_datetime(df['InvoiceDate'])\n","logger":"py.warnings"}
{"timestamp":"2025-09-07T14:18:18.664354","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"TypeError","exc_value":"DbApiHook.run() got an unexpected keyword argument 'commit_every'","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":920,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1215,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/pipeline.py","lineno":49,"name":"import_data_and_transform"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-09-07T14:18:18.723552Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-07T14:18:18.723951Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-07T14:18:18.724319Z","level":"info","event":"Task:<Task(PythonOperator): import_data>","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-07T14:18:18.724593Z","level":"info","event":"Failure caused by DbApiHook.run() got an unexpected keyword argument 'commit_every'","chan":"stdout","logger":"task"}
